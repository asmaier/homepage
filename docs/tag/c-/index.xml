<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; | Das Blog</title>
    <link>/tag/c-/</link>
      <atom:link href="/tag/c-/index.xml" rel="self" type="application/rss+xml" />
    <description>c&#43;&#43;</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>de-DE</language><lastBuildDate>Sat, 01 Jan 2005 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>c&#43;&#43;</title>
      <link>/tag/c-/</link>
    </image>
    
    <item>
      <title>Programmieren</title>
      <link>/post/programmieren/</link>
      <pubDate>Sat, 01 Jan 2005 00:00:00 +0000</pubDate>
      <guid>/post/programmieren/</guid>
      <description>&lt;p&gt; Wer gerne wissen möchte, welche Bücher &#34;Profis&#34; (Wissenschaftler und Co. ;-) ) zum 
programmieren benutzen, der kann in &lt;a href=&#34;http://scholar.google.com/&#34; &gt;Google Scholar&lt;/a&gt; z.B. nach 
&lt;a href=&#34;http://scholar.google.com/scholar?q=Java&amp;amp;amp;hl=en&amp;amp;lr=&amp;amp;btnG=Search&#34; &gt;Java&lt;/a&gt;, 
&lt;a href=&#34;http://scholar.google.com/scholar?q=C%2B%2B&amp;amp;hl=en&amp;amp;lr=&amp;amp;btnG=Search&#34; &gt;C++&lt;/a&gt;, 
&lt;a href=&#34;http://scholar.google.com/scholar?q=Fortran&amp;amp;hl=en&amp;amp;lr=&amp;amp;btnG=Search&#34; &gt;Fortran&lt;/a&gt; oder 
&lt;a href=&#34;http://scholar.google.com/scholar?q=Python&amp;amp;hl=en&amp;amp;lr=&amp;amp;btnG=Search&#34; &gt;Python&lt;/a&gt; suchen 
und erhält auf diese weise leicht die meistzitierten Programmierbücher für diese Programmiersprachen. 
Wer wissen möchte, welche Bücher ich bevorzuge, der sollte hier einfach weiterlesen: &lt;/p&gt;
&lt;h6&gt;Java&lt;/h6&gt;
&lt;p&gt;Um Java zu lernen reicht eigentlich ein Buch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/ASIN/3827322014/guidokruegerfreie/302-7208934-0117615&#34;&gt;
&#34;Handbuch der Java-Programmierung&#34; von Guido Krüger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es ist der Nachfolger von &#34;Go to Java2&#34; vom selben Autor. Und nicht nur das es
das beste Buch ist, nein, man kann es sogar kostenlos komplett aus dem Netz
laden:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javabuch.de/&#34;&gt;www.javabuch.de/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;C++&lt;/h6&gt;
&lt;p&gt;Für C++ gibt es eine Unmenge an frei erhältlichen Einsteigertutorials. Am
besten man sucht mal in &lt;a href=&#34;http://www.google.de/&#34;&gt;Google&lt;/a&gt; unter &#34;c++
tutorial&#34;. Aber ich kann mich nicht mehr erinnern, welches ich besonders gut 
fand, drum hier nur ein paar Links zu besonders ausführlichen Online-Wälzern:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;usefulthings/tic2vone.pdf&#34;&gt;TIC2Vone.pdf&lt;/a&gt; : &#34;Thinking in C++&#34; 
Volume One von Bruce Eckel im pdf-Format&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;usefulthings/tic2vtwo.pdf&#34;&gt;TIC2Vone.pdf&lt;/a&gt; : &#34;Thinking in C++&#34; 
Volume Two von Bruce Eckel im pdf-Format&lt;/li&gt; 
&lt;li&gt;&lt;a href=&#34;http://www.notes-about-cpp.com/book.html&#34;&gt;&#34;Notizen zu C++&#34;&lt;/a&gt; : von Peter
Thömmes, enthält einiges (womöglich sogar abgeschrieben) aus den Büchern von
Scott Meyers(s.u.).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; Bücher gibt es ebenfalls wie Sand am Meer. Die besten Standardwerke 
sind meiner Meinung nach folgende:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/ASIN/0201379260/
qid=1077834223/sr=2-5/ref=sr_aps_prod_5_2/302-5723593-8228013&#34;&gt;
&#34;The C++ Standard Library&#34; von Nicolai M. Josuttis&lt;/a&gt; : Das beste Buch zu C++ 
überhaupt! In keinem anderen Buch wird auch nur im Ansatz die STL so leicht
und verständlich erklärt wie in diesem. Und nebenbei lernt man noch viel über
C++ allgemein.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/ASIN/0201924889/
qid=1077835002/sr=2-1/ref=sr_2_11_1/302-5723593-8228013&#34;&gt;
&#34;Effective C++: 50 Specific Ways to Improve Your Programs and Designs&#34;
von Scott Meyers&lt;/a&gt; : Ohne dieses Buch gelesen zu haben versteht man C++
nicht! Unendlich nützlich, selbst für Einsteiger, denn in diesem Buch werden
Dinge erklärt, die man sonst nirgends liest!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/ASIN/020163371X/
qid=1077835002/sr=2-2/ref=sr_2_11_2/302-5723593-8228013&#34;&gt;
&#34;More Effective C++: 35 New Ways to Improve Your Programs and Designs&#34;
von Scott Meyers
&lt;/a&gt; : Hier liest man noch mehr Dinge, die man sonst nirgends liest. Wie der
erste Band ein absolutes Muß!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/ASIN/0201700735/
qid=1077835693/sr=2-2/ref=sr_2_3_2/302-5723593-8228013&#34;&gt;
&#34;The C++ Programming Language, Special Edition&#34; von Bjarne Stroustrup
&lt;/a&gt; : Die Bibel vom Erfinder von C++. Leider kein wirklich gutes Buch,
kompliziert, unübersichtlich aber es steht irgendwie alles drin.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/ASIN/0201633612/
qid=1077835970/sr=2-1/ref=sr_2_11_1/302-5723593-8228013&#34;&gt;
&#34;Design Patterns&#34; von Erich Gamma, Richard Helm, Ralph E. Johnson, John
Vlissides&lt;/a&gt; : Der berühmte Klassiker der &#34;Gang of Four&#34;. Pflichlektüre 
für jeden, der wissen will, wozu objektorientiertes Programmieren 
überhaupt nützlich ist.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; Eine hilfreiche wissenschaftliche Veröffentlichung ist auch folgende:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://citeseer.ist.psu.edu/dasigi99catalog.html&#34;&gt;Venu Dasigi: A Catalog of Common Bugs in C++ Programming (1999)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Und von mir gibt es natürlich auch ein paar nützliche Tips und Tricks zu C++:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;documents/cplusplus.pdf&#34;&gt;cplusplus.pdf&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;Fortran90/95&lt;/h6&gt;
&lt;p&gt;Erste Regel: FORTRAN 77 meiden wo es nur geht! Denn z.B. 
anders als in Fortran 90/95 gilt bei seinem Vorgänger FORTRAN 77 noch ein aus
der Lochkarten-Ära(!) stammendes festes Spaltenformat (fixed source form).
Wer will das schon? Leider gibt es nur sehr wenige gute Quellen um Fortran 90/95 zu lernen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rz.uni-bayreuth.de/lehre/fortran90/&#34;&gt;
www.rz.uni-bayreuth.de/lehre/fortran90/&lt;/a&gt; 
: Vorlesung der Uni Bayreuth, sehr zu empfehlen!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.de/exec/obidos/
ASIN/0070119384/qid=1077808372/sr=2-3/ref=sr_aps_prod_3_1/302-3453072-9080005&#34;&gt;
&#34;FORTRAN 90/95 for Scientists and Engineers&#34;
von Stephen J. Chapman&lt;/a&gt; : gutes Buch!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ausserdem gibt es noch nicht einmal einen Gnu-Compiler für Fortran 90. Die meisten Compiler
für Fortran 90/95 sind auch keine Freeware. Der beste frei erhältliche Fortran90/95-Compiler
ist der von Intel namens &#34;ifort&#34; (aktuell in Version 9.0):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.intel.com/software/products/global/eval.htm&#34;&gt;
developer.intel.com/software/products/global/eval.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
