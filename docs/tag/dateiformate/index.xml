<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dateiformate | Das Blog</title>
    <link>/tag/dateiformate/</link>
      <atom:link href="/tag/dateiformate/index.xml" rel="self" type="application/rss+xml" />
    <description>dateiformate</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jan 2005 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>dateiformate</title>
      <link>/tag/dateiformate/</link>
    </image>
    
    <item>
      <title>Archivieren</title>
      <link>/post/archivieren/</link>
      <pubDate>Sat, 01 Jan 2005 00:00:00 +0000</pubDate>
      <guid>/post/archivieren/</guid>
      <description>&lt;p&gt;Eine gute Einführung übers Archivieren und Komprimieren gibts in bei
&lt;a href=&#34;http://www.oreilly.de/german/freebooks/rlinux3ger/ch072.html&#34;&gt;
Welsh et al. 2000&lt;/a&gt;.
Ich beschränke mich daher im weiteren auf ein paar eigene Bemerkungen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;tt&gt;*.gz&lt;/tt&gt;-Dateien entpacken:&lt;/em&gt;
&lt;pre&gt;&gt; gunzip dateiname.gz&lt;/pre&gt;
Achtung: &lt;tt&gt;gunzip&lt;/tt&gt; ersetzt die gepackte Datei (dateiname.gz)
mit der ungepackten Version (dateiname). 
Achtung2: &lt;tt&gt;gunzip&lt;/tt&gt; ist ungeeignet um &lt;tt&gt;*.zip&lt;/tt&gt;-Dateien
zu entpacken. &lt;tt&gt;gunzip&lt;/tt&gt; unterstützt nur &lt;tt&gt;*.zip&lt;/tt&gt;-Archive,
die aus genau einer Datei bestehen (siehe auch &lt;tt&gt;man gunzip&lt;/tt&gt;).
Zum Entpacken von &lt;tt&gt;*.zip&lt;/tt&gt;-Archiven die aus mehrerer Dateien bestehen
(was praktisch immer der Fall ist) muß man &lt;tt&gt;unzip&lt;/tt&gt; verwenden.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;tt&gt;*.zip&lt;/tt&gt;-Dateien entpacken:&lt;/em&gt;
&lt;pre&gt;&gt; unzip dateiname.zip&lt;/pre&gt;
Dabei werden alle Dateien und Verzeichnisse ins aktuelle Verzeichnis entpackt.
Um Chaos zu vermeiden empfiehlt es sich daher vor dem Entpacken ein neues
Verzeichnis &lt;tt&gt;dateiname&lt;/tt&gt; anzulegen, die Datei &lt;tt&gt;dateiname.zip&lt;/tt&gt;
in dieses zu verschieben und dort erst zu entpacken. Das gleiche Vorgehen
empfiehlt sich natürlich auch für &lt;tt&gt;*.tar&lt;/tt&gt;-Archive.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;tt&gt;*.tar.gz&lt;/tt&gt;-Dateien entpacken:&lt;/em&gt;
&lt;pre&gt;&gt; tar zxvf dateiname.tar.gz&lt;/pre&gt;
Die obige Schreibweise entspricht der sogennanten BSD-Unix-Schreibweise.
&lt;tt&gt;tar&lt;/tt&gt; unterstützt auch die Standart-Schreibweise. Mit dieser
würde die obige Befehlszeile folgendermaßen aussehen:
&lt;pre&gt;&gt; tar -z -x -v -f dateiname.tar.gz&lt;/pre&gt; 
Zu beachten ist, dass die Option &lt;tt&gt;-f&lt;/tt&gt; stets die letzte ist, da diese
den zu entpackenden Dateinamen angibt und daher dieser direkt im Anschluß
an die Option &lt;tt&gt;-f&lt;/tt&gt; stehen muß. Die weiteren Optionen sind:
&lt;ul&gt;
&lt;li&gt;&lt;tt&gt;-v&lt;/tt&gt; (verbose): Damit gibt &lt;tt&gt;tar&lt;/tt&gt; Informationen über den
Entpackprozess an. Kann auch mehrfach angegeben werden, dann gibt &lt;tt&gt;tar&lt;/tt&gt;
immer mehr Informationen an.&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;-x&lt;/tt&gt; (extract): Sagt nur, dass die Datei hinter &lt;tt&gt;-f&lt;/tt&gt; entpackt 
bzw. dearchiviert werden soll.&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;-z&lt;/tt&gt;: Gibt an, dass die Datei hinter &lt;tt&gt;-f&lt;/tt&gt; zunächst mit
&lt;tt&gt;gunzip&lt;/tt&gt; entpackt und dann erst weiter mit &lt;tt&gt;tar&lt;/tt&gt; dearchiviert werden 
soll. Dies erspart den Extraaufruf von &lt;tt&gt;gunzip&lt;/tt&gt; zum Entpacken der 
&lt;tt&gt;*.tar.gz&lt;/tt&gt;-Datei. Statt &lt;tt&gt;-x&lt;/tt&gt; kann man hier übrigens auch andere Optionen
und damit andere Packprogramme verwenden. Verwendet man &lt;tt&gt;-X&lt;/tt&gt; wird 
&lt;tt&gt;uncompress&lt;/tt&gt; (für &lt;tt&gt;*.tar.z&lt;/tt&gt;-Dateien) aufgerufen, verwendet man &lt;tt&gt;-j&lt;/tt&gt;
wird &lt;tt&gt;bunzip2&lt;/tt&gt; (für &lt;tt&gt;*.tar.bz2&lt;/tt&gt;-Dateien) benutzt.&lt;/li&gt;
&lt;/ul&gt;
Hinweis: Auf FAT32-Filesystemen ist zusätzlich die 
Option &lt;tt&gt;-m&lt;/tt&gt; anzugeben, welche das Entpacken der Dateimodifikationszeit
verhindert, da es ansonsten beim Entpacken zu Fehlermeldungen kommt.
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;tt&gt;*.tar.gz&lt;/tt&gt;-Dateien packen:&lt;/em&gt;
&lt;pre&gt;&gt; tar zcvf verzeichnis.tar.gz verzeichnis&lt;/pre&gt;
Zu Beachten ist hier, dass 
(im Gegensatz zu anderen Kommandos wie z.B. &lt;tt&gt;cp&lt;/tt&gt; oder &lt;tt&gt;scp&lt;/tt&gt;)
die zu erzeugende Datei (das Ziel) zuerst angegeben
werden muß und dann erst das zu archivierende Verzeichnis (die Quelle).
Die Optionen dazu sind die gleichen wie oben beschrieben, nur steht nun
&lt;tt&gt;-c&lt;/tt&gt; dafür, dass &lt;tt&gt;tar&lt;/tt&gt; jetzt archivieren soll und &lt;tt&gt;-z&lt;/tt&gt;
steht dafür, dass nach der Archivierung durch &lt;tt&gt;tar&lt;/tt&gt; das Archiv noch
mittels &lt;tt&gt;gzip&lt;/tt&gt; komprimiert werden soll. 
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;tt&gt;*.tar.gz&lt;/tt&gt;-Dateien erzeugen, wobei versteckte Verzeichnisse von Subversion (&lt;tt&gt;.svn&lt;/tt&gt;) ausgeschlossen werden:&lt;/em&gt;
&lt;pre&gt;&gt; tar --exclude=&#39;.svn&#39; -zcvf verzeichnis.tar.gz verzeichnis&lt;/pre&gt;
oder in neueren &lt;tt&gt;tar&lt;/tt&gt; Versionen auch mit
&lt;pre&gt;&gt; tar --exclude-vcs -zcvf verzeichnis.tar.gz verzeichnis&lt;/pre&gt;
Siehe auch 
&lt;a href=&#34;http://www.linuxquestions.org/questions/linux-software-2/copy-svn-working-dir-without-svn-hidden-dirs-and-files-620586/&#34;&gt;
http://www.linuxquestions.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Entpackprozess beobachten:&lt;/em&gt;&lt;br /&gt;
Hat man beim Aufruf des Entpackprogramms die Verbose-Option vergessen und man möchte
trotzdem wissen, ob der Entpackprozess vorangeht, kann man dies mit Hilfe von
&lt;tt&gt;watch&lt;/tt&gt; erreichen. Hat man z.B. das Entpacken mehrerer 
&lt;tt&gt;*.iso.gz&lt;/tt&gt;-Dateien mittels &lt;tt&gt;gunzip&lt;/tt&gt; gestartet, kann man mittels
&lt;pre&gt;&gt;watch ls -l *.iso&lt;/pre&gt;
sehen, wie sich die Größe der entpackten Datei (im Abstand von zwei Sekunden,
da &lt;tt&gt;watch&lt;/tt&gt; einfach alle 2 Sekunden den Befehl &lt;tt&gt;ls -l&lt;/tt&gt; ausführt)
mit der Zeit entwickelt.
Hinweis: &lt;tt&gt;watch ll *.iso&lt;/tt&gt; funktioniert nicht, da &lt;tt&gt;watch&lt;/tt&gt; 
anscheinend nicht mit Aliasen umgehen kann.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Inhalt von &lt;tt&gt;*.war&lt;/tt&gt;-Dateien anzeigen&lt;/em&gt;
&lt;pre&gt;&gt; jar -tf datei.war&lt;/pre&gt;
&lt;tt&gt;war&lt;/tt&gt;-Dateien sind übrigens keine Dateien für den 
&lt;a href=&#34;http://de.wikipedia.org/wiki/Verteidigungsfall&#34;&gt;Verteidigungsfall&lt;/a&gt; sondern
sogenannte &lt;a href=&#34;http://de.wikipedia.org/wiki/Web_Archive&#34;&gt;Web Application Archive-Dateien&lt;/a&gt;
abgeleitet von 
&lt;a href=&#34;http://de.wikipedia.org/wiki/Java_Archive&#34;&gt;Java Archive-Dateien (&lt;tt&gt;*.jar&lt;/tt&gt;)&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Dateien aufteilen (splitten) und wieder zusammenfügen&lt;/em&gt;&lt;br /&gt;
Moechte man eine sehr große Datei namens &lt;tt&gt;file&lt;/tt&gt; in Teile zu je 1GB = 1024MB aufteilen, so hilft das 
&lt;tt&gt;split&lt;/tt&gt;-Kommando:
&lt;pre&gt;&gt; split -b 1024m file file.split&lt;/pre&gt;
Um die so entstandenen Teile namens &lt;tt&gt;file.split.aa, file.split.ab, ...&lt;/tt&gt; wieder zusammenzufuegen nutzt man &lt;tt&gt;cat&lt;/tt&gt;:
&lt;pre&gt;&gt; cat file.split.* &gt; file &lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Konvertieren</title>
      <link>/post/konvertieren/</link>
      <pubDate>Sat, 01 Jan 2005 00:00:00 +0000</pubDate>
      <guid>/post/konvertieren/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Umwandeln von PDF-Dateien in PS-Dateien:&lt;/em&gt;&lt;br /&gt;
Manche PDF-Dateien lassen sich nicht mit &lt;tt&gt;lpr&lt;/tt&gt; ausdrucken lassen.
Am einfachsten ist es dann, diese Dateien mit
&lt;pre&gt;&gt; acroread -toPostScript dateiname.pdf &lt;/pre&gt;
in Postscriptdateien umzuwandeln. Mehr zu den Kommandozeilenparametern
des Acrobat Reader unter Linux findet man mit
&lt;pre&gt;&gt; acroread -help&lt;/pre&gt;
oder
&lt;pre&gt;&gt; acroread -helpall&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Umwandeln von (einseitigen) PS-Dateien in GIF-Dateien:&lt;/em&gt;&lt;br /&gt;
Zum Umwandeln von PS-Dateien in GIF-Dateien verwendet man am besten
die ImageMagick-Tools. Sind diese installiert, so kann man eine einzelne
PS-Datei z.B. mit folgendem Befehl in eine GIF-Datei umwandeln:
&lt;pre&gt;&gt; convert -density 100x100 -rotate -90 -resize 768x576 datei.ps datei.gif&lt;/pre&gt;
Die Optionen im einzelnen:
&lt;ul&gt;
&lt;li&gt;&lt;tt&gt;-density 100x100&lt;/tt&gt;: Die PS-Datei wird mit jeweils 100 dpi in x- und y-Richtung
gerendert, bevor sie konvertiert wird.&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;-rotate -90&lt;/tt&gt;: Das Bild wird vor der Konvertierung um 90 Grad nach links rotiert.&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;-resize 768x576&lt;/tt&gt;: Das Bild wird von 100x100 dpi auf PAL-Auflösung von
768x576 Pixel skaliert.&lt;/li&gt;
&lt;/ul&gt;
Will man mehrere PS-Dateien in GIF-Dateien umwandeln, so kann man dies mit
&lt;pre&gt;&gt; mogrify -verbose -density 100x100 -rotate -90 -resize 768x576 -format gif *.ps&lt;/pre&gt;
erledigen. Wichtig dabei ist die zusätzliche Option &lt;tt&gt;-format gif&lt;/tt&gt;. Ohne diese würde
&lt;tt&gt;mogrify&lt;/tt&gt; die Orginal-PS-Dateien überschreiben. Mit der Option &lt;tt&gt;-verbose&lt;/tt&gt;
schließlich gibt &lt;tt&gt;mogrify&lt;/tt&gt; genauer aus, wie die Konvertierung voranschreitet.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Umwandeln von JPEG-Dateien in EPS-Dateien:&lt;/em&gt;&lt;br /&gt;
Am einfachsten gelingt das mit dem ImageMagick-Tool &lt;tt&gt;mogrify&lt;/tt&gt;:
&lt;pre&gt;
mogrify -format eps2 [name]*.jpeg
&lt;/pre&gt;
Dieser Befehl wandelt alle JPEG-Dateien in einem Verzeichnis,
die mit dem Prefix &lt;tt&gt;[name]&lt;/tt&gt; beginnen, in EPS-Dateien um (genauer gesagt in
EPS Version 2, welches intern nochmals komprimiert wird und daher wesentlich kompaktere
Dateien erzeugt). &lt;br /&gt;
Als Alternative wird oft &lt;a href=&#34;http://imgtops.sourceforge.net/&#34;&gt;&lt;tt&gt;imgtops&lt;/tt&gt;&lt;/a&gt;
angegeben. Allerdings ist &lt;tt&gt;imgtops&lt;/tt&gt; 
ein veraltetes Python-Skript aus dem Jahre 2003, welches auch nicht mehr gepflegt wird.
Bei meinen Versuchen stellte sich heraus, dass  im Gegensatz zu 
den ImageMagick-Tools keine validen EPS2-Dateien erzeugt. Fügt man die mit 
&lt;tt&gt;imgtops&lt;/tt&gt; erzeugten Dateien über Latex in ein PDF ein, so werden auf einmal 
Schriftarten falsch angezeigt. Auch sind die mit &lt;tt&gt;imgtops&lt;/tt&gt; erzeugten Dateien
wesentlich größer als die durch &lt;tt&gt;convert&lt;/tt&gt; bzw. &lt;tt&gt;mogrify&lt;/tt&gt; generierten 
EPS-Dateien. Darum Finger weg vom &lt;tt&gt;imgtops&lt;/tt&gt;, die ImageMagick-Tools machen es 
besser und können zudem noch eine ganze Menge mehr.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Umwandeln von Farb- in Graustufen-EPS-Dateien:&lt;/em&gt;&lt;br /&gt;
Es gibt verwirrend viele Möglichkeiten mit den ImageMagick-Tools ein Farb- in ein 
Graustufenbild umzuwandeln (siehe 
&lt;a href=&#34;http://www.imagemagick.org/Usage/color/#grayscale&#34;&gt;Converting Color to Gray-Scale&lt;/a&gt;).
Aber die einfachste Lösung ist die Benutzung der Option &lt;tt&gt;-type&lt;/tt&gt; wie bei 
&lt;a href=&#34;http://fightpc.blogspot.com/2007/03/grayscale-with-imagemagick.html&#34;&gt;fightpc.blogspot.com&lt;/a&gt;
beschrieben:
&lt;pre&gt;
&gt; convert color.eps -type grayscale -compress jpeg eps2:gray.eps
&lt;/pre&gt;
Zusätzlich ist hier durch Angabe von &lt;tt&gt;eps2:&lt;/tt&gt; noch sichergestellt, dass die generierte 
EPS-Datei im EPS2-Format gespeichert wird, was es möglich macht über die Option &lt;tt&gt;-compress jpeg&lt;/tt&gt; 
anzugeben, dass intern in der EPS-Datei das Bild JPEG-komprimiert gespeichert wird. Dies sollte man
immer machen, denn die so erzeugten EPS-Dateien sind wesentlich platzsparender.
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Umwandeln von (einseitigen) PS-Dateien in EPS-Dateien:&lt;/em&gt;&lt;br /&gt;
Auch dazu verwendet man am einfachsten das ImageMagick-Tool &lt;tt&gt;convert&lt;/tt&gt;:
&lt;pre&gt;
&gt; convert datei.ps datei.eps
&lt;/pre&gt;
So sollte es funktionieren, aber
leider hat die mit SUSE 9.3 mitgelieferte Version der 
Image-Magick-Tools eine Bug und man bekommt nur die folgende Fehlermeldung zu sehen:
&lt;pre&gt;
Unknown device: nodevice
convert: Delegate failed `&#34;gs&#34; -q -dBATCH -dSAFER -dMaxBitmap=500000000 
-dNOPAUSE -dAlignToPixels=0 -sDEVICE=&#34;nodevice&#34; -sOutputFile=&#34;%o&#34; -f&#34;%i&#34;&#39;.
&lt;/pre&gt;
Grund ist eine fehlerhafte Konfiguration von ImageMagick in Bezug auf Ghostview.
PS,PDF und EPS-Dateien werden nämlich nicht von &lt;tt&gt;convert&lt;/tt&gt; selbst behandelt,
stattdessen ruft es intern Ghostview auf und verwendet es zum Konvertieren der Dateien.
Die Kommandozeile für den Ghostviewaufruf entnimmt &lt;tt&gt;convert&lt;/tt&gt; der Datei
&lt;tt&gt;delegates.xml&lt;/tt&gt; (unter Suse 9.3 zu finden unter 
&lt;tt&gt;/usr/lib/ImageMagick-6.1.8/config&lt;/tt&gt;). Seltsamerweise sind in dieser Datei
sämliche Aufrufe für das Konvertieren von PS, PDF und EPS-Dateien ineinander
fehlerhaft. Dort wo &lt;tt&gt;-sDEVICE=&#34;epswrite&#34;&lt;/tt&gt; bzw. &lt;tt&gt;-sDEVICE=&#34;pswrite&#34;&lt;/tt&gt; 
oder &lt;tt&gt;-sDEVICE=&#34;pdfwrite&#34;&lt;/tt&gt; verwendet werden sollte, steht, wie aus obiger 
Fehlermeldung bereits zu sehen, &lt;tt&gt;-sDEVICE=&#34;nodevice&#34;&lt;/tt&gt;. Ist man kein Administrator,
kann man an dieser Situation auch nichts ändern, denn leider liest ImageMagick
die Konfigurationsdateien in der falschen Reihenfolge
(siehe &lt;a href=&#34;http://www.imagemagick.org/script/resources.php&#34;&gt;Resources-Seite&lt;/a&gt; der 
Image-Magick-Tools), so dass man nicht durch eine eigene Datei &lt;tt&gt;delegates.xml&lt;/tt&gt; im lokalen
Konfigurationsverzeichnis &lt;tt&gt;~/.magick&lt;/tt&gt; die fehlerhafte Datei im Verzeichnis
&lt;tt&gt;/usr/lib/ImageMagick-6.1.8/config&lt;/tt&gt; verdecken kann. Hat man Administratorrechte, so
sollte man sich an der neusten (und fehlerbereinigten) Version der Datei 
&lt;a href=&#34;http://www.imagemagick.org/source/delegates.xml&#34;&gt;delegates.xml&lt;/a&gt; von oben bereits
genannter Homepage orientieren und in der lokalen Datei sämtliche Einträge von 
&lt;tt&gt;-sDEVICE=&#34;nodevice&#34;&lt;/tt&gt; durch die entsprechenden &lt;tt&gt;-sDEVICE=&#34;epswrite&#34;&lt;/tt&gt; bzw. 
&lt;tt&gt;-sDEVICE=&#34;pswrite&#34;&lt;/tt&gt; oder &lt;tt&gt;-sDEVICE=&#34;pdfwrite&#34;&lt;/tt&gt; ersetzen. Nach dieser
Prozedur funktioniert das Konvertieren von PS zu EPS-Dateien (und auch das von PDF in EPS-Dateien)
wieder reibungslos. &lt;br /&gt;
Unter Suse 9.1 gab es übrigens einen anderen Bug beim Konvertieren von PS nach EPS-Dateien.
Zwar funktionierte hier der Aufruf von Ghostscript reibungslos, jedoch wurde die Bounding-Box-Werte
im erzeugten EPS-File falsch gesetzt. Die richtigen Werte muß man unter Suse 9.1 durch eine
Extraaufruf von Ghostscript herausbekommen und diese dann manuell an die entsprechende 
Stelle in der EPS-Datei eintragen. Diese Prozedur ist 
&lt;a href=&#34;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=205102&#34;&gt;hier&lt;/a&gt; beschrieben.&lt;/li&gt;  
&lt;/ul&gt;
&lt;h5&gt;Erstellen von Filmen und Animationen&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Erstellen von GIF-Animationen mit &lt;tt&gt;gifsicle&lt;/tt&gt;:&lt;/em&gt;&lt;br /&gt;
Das Einfügen von Videos in OpenOffice V1.x/Impress funktioniert unter
Linux leider nicht. Als Workaround kann man jedoch GIF-Animationen verwenden,
da diese als Bilder eingefügt werden können. Erstellen kann man diese
mit dem &lt;tt&gt;gifsicle&lt;/tt&gt;-Befehl, z.B.:
&lt;pre&gt;&gt; gifsicle --delay=4 --colors=256 --loopcount=forever *.gif &gt; anim.gif&lt;/pre&gt;
Dieser Befehl erstellt aus allen GIF-Dateien in einem Verzeichnis eine
GIF-Animation namens &lt;tt&gt;anim.gif&lt;/tt&gt;. Mithilfe der Option
&lt;tt&gt;--delay=4&lt;/tt&gt; wird dabei die Anzeigedauer eines Bildes zu 4 Hunderstelsekunden
(1/25 Sekunde) festgelegt, so dass die Animation mit einer
Geschwindigkeit von 25 Bildern/s abgespielt wird. Die Option
&lt;tt&gt;--loopcount=forever&lt;/tt&gt; gibt an, dass die Animation unendlich oft wiederholt
werden soll und die Option &lt;tt&gt;--colors=256&lt;/tt&gt; sorgt für die Angleichung der
Farbpaletten der Einzelbilder, so dass jedes Einzelbild dieselbe Farbpalette mit
256 Farben hat.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Erstellen von Divx-Filmen aus PNG-Dateien mit &lt;tt&gt;mencoder&lt;/tt&gt;:&lt;/em&gt;&lt;br /&gt;
Folgende Kommandozeile kann man zum Erstellen von Divx-Filmen mit dem &lt;tt&gt;mencoder&lt;/tt&gt;
verwenden:
&lt;pre&gt;
&gt; mencoder mf://*.png -mf w=800:h=600:fps=5:type=png -ovc lavc -lavcopts vcodec=mpeg4 -oac copy -ffourcc DX50 -o film.avi
&lt;/pre&gt;
Dieser Befehl erstellt aus allen PNG-Dateien in einem Verzeichnis (&lt;tt&gt;mf://*.png&lt;/tt&gt;) einen 
Film mit dem Namen &#34;film.avi&#34; (&lt;tt&gt;-o film.avi&lt;/tt&gt;) mit der Auflösung 800x600px und 
einer Bildwiederholrate von 5 Bildern pro Sekunde (&lt;tt&gt;-mf w=800:h=600:fps=5:type=png&lt;/tt&gt;). 
Zum Kodieren wird die &lt;tt&gt;libavcodec&lt;/tt&gt; des &lt;tt&gt;FFmpeg&lt;/tt&gt;-Systems verwendet (&lt;tt&gt;-ovc lavc&lt;/tt&gt;). 
Von denen mit &lt;tt&gt;libavcodec&lt;/tt&gt; möglichen Videoformaten wird Divx ausgewählt 
(&lt;tt&gt;-lavcopts vcodec=mpeg4&lt;/tt&gt;). Eventuell vorhandene Audiodaten (in PNG sind natürlich keine gespeichert!) 
werden einfach kopiert ohne nochmal kodiert zu werden (&lt;tt&gt;-oac copy&lt;/tt&gt;). &lt;em&gt;Unbedingt&lt;/em&gt; 
erforderlich ist auch die Option &lt;tt&gt;-ffourcc DX50&lt;/tt&gt;. Diese setzt die richtige Dateikennung 
&lt;tt&gt;DX50&lt;/tt&gt; für den Divx-Film. Ohne diese kann der Divx-Film ansonsten nur vom &lt;tt&gt;mplayer&lt;/tt&gt;, 
jedoch nicht(!) von sämtlichen anderen unter Windows verbreiteten Divx-Playern abgespielt werden.
Mehr dazu und zur Kodierung mit dem MPlayer gibt es auf
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nasauber.de/linux_know_how/lang/mencoder.php&#34;&gt;nasauber.de: Filme mit mencoder rippen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://de.gentoo-wiki.com/MEncoder&#34;&gt;MEncoder - Gentoo Linux Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mplayerhq.hu/DOCS/HTML/en/mencoder.html&#34;&gt;Online documentation: Basic Usage of MEncoder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wichtige Bildauflösungen:&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;PAL: 768 x 576 Pixel (Verhältnis 4:3)&lt;/li&gt;
&lt;li&gt;D1 (DVD-Auflösung): 720 x 576 Pixel (Verhältnis 5:4)&lt;/li&gt;
&lt;li&gt;HD 720 : 1280 × 720 (Verhältnis 16:9)&lt;/li&gt;
&lt;li&gt;HD 1080 : 1920 × 1080 (Verhältnis 16:9)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Verschiedenes zum Thema Dateiformat&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Dateiformat einer Datei mit unbekannter Endung oder ohne Endung herausfinden:&lt;/em&gt;
&lt;pre&gt;
&gt; file [datei]
[datei]: HTML document text
&lt;/pre&gt;
Im diesem Beispiel sieht man, das man mit dem Kommando &lt;tt&gt;file&lt;/tt&gt; sehr einfach herausfinden kann, dass die Datei
&lt;tt&gt;[datei]&lt;/tt&gt; eine HTML Datei ist. Das ganze funktioniert auch z.B. bei Verzeichnissen:
&lt;pre&gt;
&gt; file [verzeichnis]
[verzeichnis]: directory
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Herausfinden, ob eine XML-Datei valide ist:&lt;/em&gt;&lt;br /&gt;
Um zu sehen, ob eine XML-Datei valide ist, d.h. entsprechende einem Schema z.B. im XSD-Format vorliegt, benutzt man
&lt;pre&gt;
&gt; xmllint -noout Output.xml --schema ../schema/output_2.5.xsd
&lt;/pre&gt;
In diesem Beispiel wird getestet, ob die Datei &lt;tt&gt;Output.xml&lt;/tt&gt; dem Schema &lt;tt&gt;output_2.5.xsd&lt;/tt&gt; entspricht. Gibt das
Kommando keine weiter Ausgabe zurück ist die Datei tatsächlich valide, ansonsten erscheinen Fehlermeldungen über die
entsprechenden fehlerhaften Zeilen. 
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Herausfinden, ob ein Programm für 32 oder 64bit, dynamisch oder statisch gelinkt kompiliert wurde:&lt;/em&gt;&lt;br /&gt;
Auch das gelingt mit dem &lt;tt&gt;file&lt;/tt&gt;-Kommando:
&lt;pre&gt;
&gt; file ssh
ssh: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), for GNU/Linux 2.6.9,
dynamically linked (uses shared libs), for GNU/Linux 2.6.9, not stripped
&lt;/pre&gt;
Detailliertere Informatione bekommt man in diesem Fall mit 
&lt;pre&gt;
&gt; readelf -h ssh
ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00
  Class:                             ELF32
  Data:                              2&#39;s complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Intel 80386
  Version:                           0x1
  Entry point address:               0x80508d0
  Start of program headers:          52 (bytes into file)
  Start of section headers:          1960868 (bytes into file)
  Flags:                             0x0
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         8
  Size of section headers:           40 (bytes)
  Number of section headers:         37
  Section header string table index: 34
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
